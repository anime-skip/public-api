name: Publish Staged
on:
  push:
    branches:
      - main

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_REPO: anime-skip/backend

jobs:
  # verify:
  #   name: Verify Build
  #   if: "!contains(github.event.head_commit.message, 'chore(release)')"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create .env
  #       run: ./.github/create-env.sh
  #     - name: Build
  #       run: make build
  #     - uses: actions/setup-go@v1
  #       with:
  #         go-version: 1.13
  #     - name: Lint
  #       run: echo "TODO" # make lint
  #     - name: Run Tests
  #       run: make test
  #     - name: Run E2E Tests
  #       run: echo "TODO" # make e2e-test
  publish:
    name: Publish the :staged container
    runs-on: ubuntu-latest
    # needs: verify
    steps:
      - uses: actions/checkout@v2
      - name: Switch to staged branch
        run: |
          git checkout -b staged
          git push -f --set-upstream origin staged
      - name: Checkout Wiki's Repo
        uses: actions/checkout@v2
        with:
          repository: anime-skip/backend.wiki
          path: wiki
      - name: Setup Git Config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - uses: akhileshns/heroku-deploy@v3.7.8
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ""
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          justlogin: true
      - name: Get Pre-conventional Commits Changelog
        id: old_changelog
        run: |
          OLD_CHANGELOG=$(cat $GITHUB_WORKSPACE/wiki/Pre-conventional-Commits-Changelog.md)
          echo "::set-output name=old_changelog_output::$OLD_CHANGELOG"
      - name: Bump Version and Changelog
        id: changelog
        uses: aklinker1/conventional-changelog-action@7b07deb5df5e4fa8e57c4f6b89859a25c12f45cf
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-message: 'chore(release): Version {version}'
          output-file: CHANGELOG.md
          release-count: 0 # 0 = all
          version-file: ./meta.json
          version-path: version
          skip-commit: true
      - name: Append old changelog
        run: |
          echo "$OLD_CHANGELOG" >> CHANGELOG.md
        env:
          OLD_CHANGELOG: ${{ steps.old_changelog.outputs.old_changelog_output }}
      - name: Delete the tag from GitHub
        continue-on-error: true
        run: git push --delete origin $TAG
        env:
          TAG: ${{ steps.changelog.outputs.tag }}
      - name: Delete the tag locally
        continue-on-error: true
        run: git tag -d $TAG
        env:
          TAG: ${{ steps.changelog.outputs.tag }}
      - name: Commit new changelog
        run: |
          echo New version: $TAG
          NEW_META=$(jq ".version=\"${TAG/v/}\"" meta.json)
          echo $NEW_META > meta.json

          git commit -am "chore(release): $TAG"
          git tag -a $TAG -m $TAG 
          git push --tags
        env:
          TAG: ${{ steps.changelog.outputs.tag }}
      - name: Create new staged branch
        run: |
          git push -f origin staged
          git push --tags
      - name: Push :staged to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: anime-skip/backend/api
          tags: staged
      - name: Deploy staged.api.anime-skip.com
        run: |
          docker login -u "${{ secrets.HEROKU_EMAIL }}" -p "${{ secrets.HEROKU_API_KEY }}" "$HEROKU_REGISTRY"
          docker image tag $BASE_IMAGE $HEROKU_TAG
          docker push $HEROKU_TAG
          heroku container:release -a staged-api-service web
        env:
          HEROKU_REGISTRY: registry.heroku.com
          BASE_IMAGE: docker.pkg.github.com/anime-skip/backend/api:staged
          HEROKU_TAG: registry.heroku.com/staged-api-service/web
