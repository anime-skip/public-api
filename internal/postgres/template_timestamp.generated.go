// Code generated by cmd/sqlgen/main.go, DO NOT EDIT.

package postgres

import (
	internal "anime-skip.com/timestamps-service/internal"
	"context"
	"fmt"
	uuid "github.com/gofrs/uuid"
	sqlx "github.com/jmoiron/sqlx"
)

func getTemplateTimestampsByTemplateID(ctx context.Context, db internal.Database, templateID uuid.UUID) ([]internal.TemplateTimestamp, error) {
	rows, err := db.QueryxContext(ctx, "SELECT * FROM template_timestamps")
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	templateTimestamps := []internal.TemplateTimestamp{}
	for rows.Next() {
		var templateTimestamp internal.TemplateTimestamp
		err = rows.StructScan(&templateTimestamp)
		if err != nil {
			return nil, err
		}
		templateTimestamps = append(templateTimestamps, templateTimestamp)
	}
	return templateTimestamps, nil
}

func getTemplateTimestampsByTimestampID(ctx context.Context, db internal.Database, timestampID uuid.UUID) ([]internal.TemplateTimestamp, error) {
	rows, err := db.QueryxContext(ctx, "SELECT * FROM template_timestamps")
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	templateTimestamps := []internal.TemplateTimestamp{}
	for rows.Next() {
		var templateTimestamp internal.TemplateTimestamp
		err = rows.StructScan(&templateTimestamp)
		if err != nil {
			return nil, err
		}
		templateTimestamps = append(templateTimestamps, templateTimestamp)
	}
	return templateTimestamps, nil
}

// Inserts a TemplateTimestamp, filling out it's created at and updated at metadata
func insertTemplateTimestampInTx(ctx context.Context, tx *sqlx.Tx, templateTimestamp internal.TemplateTimestamp) (internal.TemplateTimestamp, error) {
	newTemplateTimestamp := templateTimestamp
	result, err := tx.ExecContext(
		ctx,
		"INSERT INTO template_timestamps(template_id, timestamp_id) VALUES ($1, $2)",
		newTemplateTimestamp.TemplateID, newTemplateTimestamp.TimestampID,
	)
	if err != nil {
		return internal.TemplateTimestamp{}, err
	}
	changedRows, err := result.RowsAffected()
	if err != nil {
		return internal.TemplateTimestamp{}, err
	}
	if changedRows != 1 {
		return internal.TemplateTimestamp{}, fmt.Errorf("Inserted %d rows, not 1", changedRows)
	}
	return newTemplateTimestamp, err
}
