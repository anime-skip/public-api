type Mutation {
  # Account
  """
  Create a user account
  """
  createAccount(username: String!, email: String!, passwordHash: String!): Account
  resendVerificationEmail(userId: ID!): Boolean # TODO - authorized?
  verifyEmailAddress(validationToken: String!): Account
  deleteAccountRequest(accoutnId: String!, passwordHash: String!): Account
  deleteAccount(deleteToken: String!): Account

  # Prefernces
  savePreferences(preferences: InputPreferences!): Preferences @authorized

  # Shows
  createShow(showInput: InputShow!, becomeAdmin: Boolean!): Show @authorized
  updateShow(showId: ID! @isShowAdmin, newShow: InputShow!): Show
  deleteShow(showId: ID!): Show @hasRole(role: ADMIN)

  # Show Admins
  createShowAdmin(showAdminInput: InputShowAdmin! @isShowAdmin): ShowAdmin
  deleteShowAdmin(showAdminId: ID! @isShowAdmin): ShowAdmin

  # Episodes
  createEpisode(showId: ID! @isShowAdmin, episodeInput: InputEpisode!): Episode
  updateEpisode(episodeId: ID! @isShowAdmin, newEpisode: InputEpisode!): Episode
  deleteEpisode(episodeId: ID! @isShowAdmin): Episode

  # Episode Urls
  createEpisodeUrl(episodeId: ID! @isShowAdmin, episodeUrlInput: InputEpisodeUrl!): EpisodeUrl
  deleteEpisodeUrl(episodeUrl: String! @isShowAdmin): EpisodeUrl

  # Timestamps
  createTimestamp(episodeId: ID! @isShowAdmin, timestampInput: InputTimestamp!): Timestamp
  updateTimestamp(timestampId: ID! @isShowAdmin, newTimestamp: InputTimestamp!): Timestamp 
  deleteTimestamp(timestampId: ID! @isShowAdmin): Timestamp

  # Timestamp Types
  createTimestampType(timestampTypeInput: InputTimestampType!): TimestampType @hasRole(role: ADMIN)
  updateTimestampType(timestampTypeId: ID!, newTimestampType: InputTimestampType!): TimestampType @hasRole(role: ADMIN)
  deleteTimestampType(timestampTypeId: ID!): TimestampType  @hasRole(role: ADMIN)
}
