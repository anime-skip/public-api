interface BaseModel {
  id: ID!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User
}

# Episode
type Episode implements BaseModel {
  id: ID!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User

  season: Int
  number: Int
  absoluteNumber: Int
  name: String
  show: Show!
  showId: ID!
  timestamps: [Timestamp!]!
  urls: [EpisodeUrl!]!
}
input InputEpisode {
  season: Int
  number: Int
  absoluteNumber: Int
  name: String
}

# EpisodeUrl
type EpisodeUrl {
  url: String!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User

  episodeId: ID!
  episode: Episode!
  source: EpisodeSource!
}
input InputEpisodeUrl {
  url: String!
}

# MyUser
type MyUser {
  id: ID!
  createdAt: Time!
  deletedAt: Time

  username: String!
  email: String!
  profileUrl: String!
  adminOfShows: [ShowAdmin!]!

  emailVerified: Boolean!
  role: Role!
  preferences: Preferences!
}

# Preferences
type Preferences {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  deletedAt: Time

  userId: ID!
  user: User!
  enableAutoSkip: Boolean!
  enableAutoPlay: Boolean!
  skipBranding: Boolean!
  skipIntros: Boolean!
  skipNewIntros: Boolean!
  skipMixedIntros: Boolean!
  skipRecaps: Boolean!
  skipFiller: Boolean!
  skipCanon: Boolean!
  skipTransitions: Boolean!
  skipCredits: Boolean!
  skipNewCredits: Boolean!
  skipMixedCredits: Boolean!
  skipPreview: Boolean!
  skipTitleCard: Boolean!
}
input InputPreferences {
  enableAutoSkip: Boolean!
  enableAutoPlay: Boolean!
  skipBranding: Boolean!
  skipIntros: Boolean!
  skipNewIntros: Boolean!
  skipMixedIntros: Boolean!
  skipRecaps: Boolean!
  skipFiller: Boolean!
  skipCanon: Boolean!
  skipTransitions: Boolean!
  skipCredits: Boolean!
  skipNewCredits: Boolean!
  skipMixedCredits: Boolean!
  skipPreview: Boolean!
  skipTitleCard: Boolean!
}

# Show
type Show implements BaseModel {
  id: ID!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User

  name: String!
  originalName: String
  website: String
  image: String
  admins: [ShowAdmin!]!
  episodes: [Episode!]!
}
input InputShow {
  name: String!
  originalName: String
  website: String
  image: String
}

# ShowAdmin 
type ShowAdmin implements BaseModel {
  id: ID!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User

  showId: ID!
  show: Show!
  userId: ID!
  user: User!
}
input InputShowAdmin {
  showId: ID!
  userId: ID!
}

# Timestamp
type Timestamp implements BaseModel {
  id: ID!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User

  at: Float!
  typeId: ID!
  type: TimestampType!
  episodeId: ID!
  episode: Episode!
}
input InputTimestamp {
  at: Float!
  typeId: ID!
}

# TimestampType
type TimestampType implements BaseModel {
  id: ID!
  createdAt: Time!
  createdByUserId: ID!
  createdBy: User!
  updatedAt: Time!
  updatedByUserId: ID!
  updatedBy: User!
  deletedAt: Time
  deletedByUserId: ID
  deletedBy: User

  name: String!
  description: String!
}
input InputTimestampType {
  name: String!
  description: String!
}

# User
type User {
  id: ID!
  createdAt: Time!
  deletedAt: Time

  username: String!
  email: String!
  profileUrl: String!
  adminOfShows: [ShowAdmin!]!
}
